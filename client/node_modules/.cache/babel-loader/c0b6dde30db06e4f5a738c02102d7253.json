{"ast":null,"code":"import _regeneratorRuntime from \"/Users/prabhueshwarla/ethereum/teach/workshop/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/prabhueshwarla/ethereum/teach/workshop/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/prabhueshwarla/ethereum/teach/workshop/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/prabhueshwarla/ethereum/teach/workshop/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/prabhueshwarla/ethereum/teach/workshop/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/prabhueshwarla/ethereum/teach/workshop/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/prabhueshwarla/ethereum/teach/workshop/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/prabhueshwarla/ethereum/teach/workshop/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/prabhueshwarla/ethereum/teach/workshop/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      storageValue: 0,\n      web3: null,\n      accounts: null,\n      contract: null\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var web3, accounts, networkId, deployedNetwork, instance;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getWeb3();\n\n            case 3:\n              web3 = _context.sent;\n              _context.next = 6;\n              return web3.eth.getAccounts();\n\n            case 6:\n              accounts = _context.sent;\n              _context.next = 9;\n              return web3.eth.net.getId();\n\n            case 9:\n              networkId = _context.sent;\n              deployedNetwork = SimpleStorageContract.networks[networkId];\n              instance = new web3.eth.Contract(SimpleStorageContract.abi, deployedNetwork && deployedNetwork.address); // Set web3, accounts, and contract to the state, and then proceed with an\n              // example of interacting with the contract's methods.\n\n              _this.setState({\n                web3: web3,\n                accounts: accounts,\n                contract: instance\n              }, _this.runExample);\n\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              // Catch any errors for any of the above operations.\n              alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n              console.error(_context.t0);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 15]]);\n    }));\n    _this.runExample =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$state, accounts, contract, response;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, accounts = _this$state.accounts, contract = _this$state.contract; // Stores a given value, 5 by default.\n\n              _context2.next = 3;\n              return contract.methods.set(8).send({\n                from: accounts[0]\n              });\n\n            case 3:\n              _context2.next = 5;\n              return contract.methods.get().call();\n\n            case 5:\n              response = _context2.sent;\n\n              // Update state with the result.\n              _this.setState({\n                storageValue: response\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.state = {\n      storageValue: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      alert('A name was submitted: ' + this.state.storageValue);\n      event.preventDefault();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        storageValue: event.target.storageValue\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.web3) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Loading Web3, accounts, and contract...\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Good to Go!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Your Truffle Box is installed and ready.\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Smart Contract Example\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"If your contracts compiled and migrated successfully, below will show a stored value of 5 (by default).\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.storageValue,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Try changing the value stored on \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"line 40\"), \" of App.js.\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"The stored value is: \", this.state.storageValue));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/prabhueshwarla/ethereum/teach/workshop/client/src/App.js"],"names":["React","Component","SimpleStorageContract","getWeb3","App","props","state","storageValue","web3","accounts","contract","componentDidMount","eth","getAccounts","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","setState","runExample","alert","console","error","methods","set","send","from","get","call","response","handleChange","bind","handleSubmit","event","preventDefault","target"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./utils/getWeb3\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {storageValue: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  state = { storageValue: 0, web3: null, accounts: null, contract: null };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SimpleStorageContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        SimpleStorageContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance }, this.runExample);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  runExample = async () => {\n    const { accounts, contract } = this.state;\n\n    // Stores a given value, 5 by default.\n    await contract.methods.set(8).send({ from: accounts[0] });\n\n    // Get the value from the contract to prove it worked.\n    const response = await contract.methods.get().call();\n\n    // Update state with the result.\n    this.setState({ storageValue: response });\n  };\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.storageValue);\n    event.preventDefault();\n  }\n  handleChange(event) {\n    this.setState({storageValue: event.target.storageValue});\n  }\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <div className=\"App\">\n        <h1>Good to Go!</h1>\n        <p>Your Truffle Box is installed and ready.</p>\n        <h2>Smart Contract Example</h2>\n        <p>\n          If your contracts compiled and migrated successfully, below will show\n          a stored value of 5 (by default).\n        </p>\n        <form onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <input type=\"text\" value={this.state.storageValue} onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n        <p>\n          Try changing the value stored on <strong>line 40</strong> of App.js.\n        </p>\n        <div>The stored value is: {this.state.storageValue}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}